<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Module Editor</title>
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap'>
  <link rel="stylesheet" href="/style_home.css">
</head>
<body class="font-['Space_Grotesk'] bg-gray-900 text-white overflow-x-hidden">

  <!-- Background Decorative Elements -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none z-0">
    <div class="absolute top-20 left-10 w-96 h-96 bg-indigo-900/10 rounded-full blur-3xl"></div>
    <div class="absolute bottom-10 right-10 w-80 h-80 bg-purple-900/10 rounded-full blur-3xl"></div>
    <div class="absolute top-40 right-20 w-64 h-64 bg-cyan-900/10 rounded-full blur-3xl"></div>
  </div>

  <!-- Navigation Bar -->
  <nav class="fixed top-0 left-0 right-0 bg-gray-900/70 backdrop-blur-lg border-b border-cyan-500/30 z-50">
    <div class="container mx-auto px-6 py-3 flex items-center justify-between">
      <div class="text-xl font-medium bg-gradient-to-r from-indigo-400 via-cyan-400 to-purple-400 bg-clip-text text-transparent">The GIST</div>
      <a href="/home" class="text-cyan-400 hover:text-white transition-colors">Home</a>
    </div>
  </nav>

  <main class="pt-24 container mx-auto px-6 space-y-12">

    <!-- Module Editor Header -->
    <section class="text-center mb-8">
      <h1 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent">Module Editor</h1>
      <p class="text-gray-400 mt-2">Add markers, edit modules, and manage your maps</p>
    </section>

    <!-- Mode Buttons -->
    <div id="mode-buttons" class="flex gap-4 justify-center">
      <button id="view-mode" class="px-4 py-2 bg-gray-800 rounded hover:bg-gray-700 transition">View Mode</button>
      <button id="place-mode" class="px-4 py-2 bg-gray-800 rounded hover:bg-gray-700 transition">Place Mode</button>
      <button id="save-markers" class="px-4 py-2 bg-cyan-500 rounded hover:bg-cyan-400 transition">Save Markers</button>
    </div>

    <!-- Manual Marker Form -->
    <section class="bg-gray-800/70 backdrop-blur-lg border border-indigo-500/20 p-6 rounded-xl max-w-xl mx-auto">
      <h3 class="text-xl font-medium mb-4">Add Marker Manually</h3>
      <form id="marker-form" class="space-y-4">
        <input type="text" id="country" placeholder="Country" required class="w-full p-2 rounded bg-gray-900/50 border border-gray-700">
        <input type="text" id="type" placeholder="Type" required class="w-full p-2 rounded bg-gray-900/50 border border-gray-700">
        <input type="text" id="markerType" placeholder="Marker Type" required class="w-full p-2 rounded bg-gray-900/50 border border-gray-700">
        <input type="number" id="latitude" step="any" placeholder="Latitude" class="w-full p-2 rounded bg-gray-900/50 border border-gray-700">
        <input type="number" id="longitude" step="any" placeholder="Longitude" class="w-full p-2 rounded bg-gray-900/50 border border-gray-700">
        <textarea id="description" rows="4" placeholder="Description" class="w-full p-2 rounded bg-gray-900/50 border border-gray-700" required></textarea>
        <button type="submit" class="w-full py-2 bg-cyan-500 rounded hover:bg-cyan-400 transition">Send Marker</button>
      </form>
    </section>

    <!-- Geemap Iframe -->
    <section>
      <iframe id="geemap-frame" src="" class="w-full h-[600px] border-0 rounded-xl shadow-lg"></iframe>
    </section>

  </main>

  <!-- Scripts -->
  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const id = urlParams.get('id') || '1';
    const iframe = document.getElementById('geemap-frame');
    iframe.src = `/module/geemaps/geemap_id_${id}.html`;

    let mode = 'view';
    document.getElementById('view-mode').onclick = () => mode = 'view';
    document.getElementById('place-mode').onclick = () => mode = 'place';

    iframe.onload = () => {
      const map = iframe.contentWindow._geemap_map;
      if (!map) return console.error("Could not access the map object inside iframe.");
      const markerLayer = L.layerGroup().addTo(map);
      const markers = [];

      function createEditablePopup(marker) {
        const container = document.createElement('div');
        container.className = 'marker-popup';
        container.innerHTML = `
          <label>Title: <input type="text" value="Marker"></label>
          <label>Description: <textarea>Describe here</textarea></label>
          <label>Type: <input type="text" value="Point"></label>
          <button class="save-marker">Save</button>
        `;
        container.querySelector('.save-marker').onclick = () => {
          const title = container.querySelector('input').value;
          const desc = container.querySelector('textarea').value;
          const type = container.querySelectorAll('input')[1].value || 'Point';
          const latlng = marker.getLatLng();
          markers.push({ title, desc, type, lat: latlng.lat, lng: latlng.lng });
          alert('Marker saved!');
        };
        return container;
      }

      map.on('click', (e) => {
        if (mode !== 'place') return;
        const marker = L.marker(e.latlng, { draggable: true }).addTo(markerLayer);
        marker.bindPopup(createEditablePopup(marker)).openPopup();
      });

      document.getElementById('save-markers').onclick = () => {
        fetch('/save-markers', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(markers)
        }).then(res => res.json())
          .then(data => alert('Saved: ' + JSON.stringify(data)))
          .catch(err => console.error(err));
      };
    };

    document.getElementById('marker-form').addEventListener('submit', (e) => {
      e.preventDefault();
      const markerData = {
        moduleId: parseInt(id),
        country: document.getElementById('country').value,
        type: document.getElementById('type').value,
        markerType: document.getElementById('markerType').value,
        lat: parseFloat(document.getElementById('latitude').value),
        lng: parseFloat(document.getElementById('longitude').value),
        description: document.getElementById('description').value
      };
      fetch('/manual-marker', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(markerData)
      })
      .then(res => res.json())
      .then(data => alert('Server received: ' + JSON.stringify(data)))
      .catch(err => console.error(err));
    });
  </script>
  <script src="https://cdn.tailwindcss.com"></script>
</body>
</html>
